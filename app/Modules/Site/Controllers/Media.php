<?php
/**
 * Created by PhpStorm.
 * User: cicle creative
 * Date: 10/09/2019
 * Time: 17:04
 */

namespace App\Manage\Modules\Site\Controllers;


use App\Manage\Modules\Site\Http\Controller;
use O2System\Filesystem\Handlers\Uploader;
use O2System\Framework\Libraries\Ui\Contents\Lists\Unordered;
use O2System\Spl\DataStructures\SplArrayObject;

class Media extends Controller
{
    public $model = '\App\Api\Modules\Media\Models\Media';

    public function __reconstruct()
    {
        parent::__reconstruct(); // TODO: Change the autogenerated stub
        $this->model = new $this->model;
    }

    public function index()
    {
        $get = new SplArrayObject([
            'status'   => input()->get('status') ? input()->get('status') : '',
        ]);
        if($status = $get->status){
            $this->model->qb->where('record_status', $get);
        }
        view('media/index',[
            'medias'    => $this->model->all(),
            'get'   => $get
        ]);
    }

    public function upload()
    {
        $imagePath = PATH_STORAGE . 'images/site/media/';

        if (!file_exists($imagePath)){
            mkdir($imagePath, 0777);
        }

        $upload = new Uploader();
        $upload->setPath($imagePath);
        $upload->process('images');

        if ($upload->getErrors()) {
            $errors = new Unordered();

            foreach ($upload->getErrors() as $code => $error) {
                $errors->createList($error);
            }

            header('Content-Type: application/json');
            echo json_encode(['message' => 'Failed!']);
        } else {
            $file = $upload->getUploadedFiles()->first();

            // Save..
            $this->model->insert([
                'filename' => $file['name'],
                'mime'      => strtoupper(explode('/',$file['mime'])[0]),
                'label' => explode('.', $file['name'])[0]
            ]);

            $this->output
                ->setContentType('application/json')
                ->send($file);
        }
    }

    public function delete($id)
    {
        $this->models->media->softDelete($id);
        $this->session->setFlash('success', $this->language->getLine('SUCCESS_DELETE'));

        redirect_url('site/media');
    }
}
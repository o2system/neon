@mixin transition($transition) {
	-webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

@mixin button-variant($color, $background, $border) {
  	color: $color;
  	background-color: $background;
  	border-color: $border;

  	&:focus,
  	&.focus {
    	color: $color;
    	background-color: darken($background, 10%);
        border-color: darken($border, 25%);
  	}
  	&:hover {
    	color: $color;
    	background-color: darken($background, 10%);
        border-color: darken($border, 12%);
  	}
  	&:active,
  	&.active,
  	.open > &.dropdown-toggle {
    	color: $color;
    	background-color: darken($background, 10%);
        border-color: darken($border, 12%);

    	&:hover,
    	&:focus,
    	&.focus {
      		color: $color;
      		background-color: darken($background, 17%);
          	border-color: darken($border, 25%);
            box-shadow: none;
    	}
  	}
  	&:active,
  	&.active,
  	.open > &.dropdown-toggle {
    	background-image: none;
  	}
  	&.disabled,
  	&[disabled],
  	fieldset[disabled] & {
    	&:hover,
    	&:focus,
    	&.focus {
      		background-color: $background;
          	border-color: $border;
            box-shadow: none;
    	}
  	}

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: $color;
      background-color: darken($background, 10%);
      border-color: darken($background, 12%);

      &:focus {
        box-shadow: none;
      }
    }

  	.badge {
    	color: $background;
    	background-color: $color;
  	}
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

@mixin avatar($size){
    width: $size;
    height: $size;
    margin-right: 10px;
    overflow: hidden;
    padding: 0;

    img{
        width: 100%;
        height: auto;
    }
}